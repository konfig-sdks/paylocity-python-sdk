# coding: utf-8

"""
    WebLink API

    For documentation about this API, please visit https://developer.paylocity.com/integrations/reference/weblink-overview

    The version of the OpenAPI document: v2
    Contact: webservices@paylocity.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from paylocity_python_sdk.pydantic.new_additional_direct_deposit import NewAdditionalDirectDeposit
from paylocity_python_sdk.pydantic.new_benefit_class_setup import NewBenefitClassSetup
from paylocity_python_sdk.pydantic.new_fed_tax import NewFedTax
from paylocity_python_sdk.pydantic.new_local_tax import NewLocalTax
from paylocity_python_sdk.pydantic.new_main_direct_deposit import NewMainDirectDeposit
from paylocity_python_sdk.pydantic.new_state_tax import NewStateTax
from paylocity_python_sdk.pydantic.new_work_eligibility import NewWorkEligibility

class NewEmployee(BaseModel):
    # Paylocity assigned company number.<br  /> Max length: 9
    company_number: str = Field(alias='companyNumber')

    # Employee current job title.<br  />Max length: 50
    title: typing.Optional[str] = Field(None, alias='title')

    # Employee home 1st address line. <br  />Max length: 40
    address1: typing.Optional[str] = Field(None, alias='address1')

    # Employee home 2nd address line. <br  />Max length: 40
    address2: typing.Optional[str] = Field(None, alias='address2')

    # Adjusted seniority date. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
    adj_seniority_date: typing.Optional[date] = Field(None, alias='adjSeniorityDate')

    # Employee annual salary. <br  />Decimal (12,2)
    annual_salary: typing.Optional[typing.Union[int, float]] = Field(None, alias='annualSalary')

    # *True* to have Paylocity Payroll/HR solution automatically assign the next available employee ID.<br  />*False* when providing a value in the employeeId field.
    auto_generate_employee_id: typing.Optional[bool] = Field(None, alias='autoGenerateEmployeeId')

    # If set to *True*, employee will be paid automatically using deafultHours.
    auto_pay: typing.Optional[bool] = Field(None, alias='autoPay')

    # Valid values are *N, D, S*. (N- employee won't automatically receive a salary or hours during payroll, D - employee will be automatically paid in defaultHours during payroll, S - employee will be automatically paid Salary
    auto_pay_type: typing.Optional[str] = Field(None, alias='autoPayType')

    # Employee base rate, used for Hourly employees. <br  />Decimal (12,2)
    base_rate: typing.Optional[typing.Union[int, float]] = Field(None, alias='baseRate')

    # Employee birthdate. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
    birth_date: typing.Optional[date] = Field(None, alias='birthDate')

    # Employee home city. <br  />Max length: 40
    city: typing.Optional[str] = Field(None, alias='city')

    # Employee clock badge number. Deafults to employeeId. <br  />Max length: 10
    clock_badge: typing.Optional[str] = Field(None, alias='clockBadge')

    # Employer defined location, like *branch, division, department*, etc. Must match Company setup. <br  />Max length: 10
    cost_center1: typing.Optional[str] = Field(None, alias='costCenter1')

    # Employer defined location, like *branch, division, department*, etc. Must match Company setup. <br  />Max length: 10
    cost_center2: typing.Optional[str] = Field(None, alias='costCenter2')

    # Employer defined location, like *branch, division, department*, etc. Must match Company setup. <br  />Max length: 10
    cost_center3: typing.Optional[str] = Field(None, alias='costCenter3')

    # Employee country. <br  /> Max length: 30
    country: typing.Optional[str] = Field(None, alias='country')

    # Employee county.<br  /> Max length: 30 
    county: typing.Optional[str] = Field(None, alias='county')

    # Employee default hours consistently worked. If autoPayType is set to D, employee will be paid hourly base rate for the defaultHours. <br  />Decimal (12,2)
    default_hours: typing.Optional[typing.Union[int, float]] = Field(None, alias='defaultHours')

    # Indicates if employee has disability status.
    disability: typing.Optional[bool] = Field(None, alias='disability')

    # Indicates if employee eligible for rehire.
    eligible_for_rehire: typing.Optional[bool] = Field(None, alias='eligibleForRehire')

    # Indicates if employee in agriculture or farming.
    employee943: typing.Optional[bool] = Field(None, alias='employee943')

    # Leave blank to have Paylocity Payroll/HR solution automatically assign the next available employee ID.<br  /> Max length: 10
    employee_id: typing.Optional[str] = Field(None, alias='employeeId')

    # Employee current work status. Common values are *A* (Active), *L* (Leave of Absence), *T* (Terminated). <br  />Max length: 20
    employee_status: typing.Optional[str] = Field(None, alias='employeeStatus')

    # Employee current employment type. Common values *RFT (Regular Full Time), RPT (Regular Part Time), SNL (Seasonal), TFT (Temporary Full Time), TPT (Temporary Part Time)*. <br  />Max length: 10
    employment_type: typing.Optional[str] = Field(None, alias='employmentType')

    # Values are configured in Company > Setup > HR > EEO Classes.<br  /> Max length: 10
    equal_employment_opportunity_class: typing.Optional[str] = Field(None, alias='equalEmploymentOpportunityClass')

    # Employee ethnicity.<br  /> Max length: 10
    ethnicity: typing.Optional[str] = Field(None, alias='ethnicity')

    # Employee first name. <br  />Max length: 40
    first_name: typing.Optional[str] = Field(None, alias='firstName')

    # Indicates if employee exempt from federal income tax.
    fitw_exempt: typing.Optional[bool] = Field(None, alias='fitwExempt')

    # Notes for FITW exempt.<br  /> Max length: 250
    fitw_exempt_notes: typing.Optional[str] = Field(None, alias='fitwExemptNotes')

    # Reason code for FITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30
    fitw_exempt_reason: typing.Optional[str] = Field(None, alias='fitwExemptReason')

    # Indicates if employee is exempt from Federal Unemployment Tax Act.
    futa_exempt: typing.Optional[bool] = Field(None, alias='futaExempt')

    # FUTA exempt note. <br  /> Max length: 250
    futa_exempt_notes: typing.Optional[str] = Field(None, alias='futaExemptNotes')

    # Reason code for FUTA exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max length: 30
    futa_exempt_reason: typing.Optional[str] = Field(None, alias='futaExemptReason')

    # Employee hired date. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
    hire_date: typing.Optional[date] = Field(None, alias='hireDate')

    # Employee home phone number.<br  />Max length: 12
    home_phone: typing.Optional[str] = Field(None, alias='homePhone')

    # Indicates if employee is a supervisor or reviewer.
    is_supervisor_reviewer: typing.Optional[bool] = Field(None, alias='isSupervisorReviewer')

    # Employee last name. <br  />Max length: 40
    last_name: typing.Optional[str] = Field(None, alias='lastName')

    # Employee marital status. Common values *D (Divorced), M (Married), S (Single), W (Widowed)*. <br  />Max length: 10
    marital_status: typing.Optional[str] = Field(None, alias='maritalStatus')

    # Indicates if employee is Medicare exempt.
    med_exempt: typing.Optional[bool] = Field(None, alias='medExempt')

    # Notes for Medicare exempt.
    med_exempt_notes: typing.Optional[str] = Field(None, alias='medExemptNotes')

    # Reason code for Medicare exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max length: 30
    med_exempt_reason: typing.Optional[str] = Field(None, alias='medExemptReason')

    # Employee middle name.<br  /> Max length: 20
    middle_name: typing.Optional[str] = Field(None, alias='middleName')

    # Indicates if employee is exempt from minimum wage.
    minimum_wage_exempt: typing.Optional[bool] = Field(None, alias='minimumWageExempt')

    # Employee preferred display name.<br  /> Max length: 20
    nickname: typing.Optional[str] = Field(None, alias='nickname')

    # Indicates override to the default Job Title. Use the title field to enter Employee job title.
    override_title: typing.Optional[bool] = Field(None, alias='overrideTitle')

    # Indicates if employee is exempt from overtime.
    overtime_exempt: typing.Optional[bool] = Field(None, alias='overtimeExempt')

    # Employee current pay frequency. Common values are *A (Annual), B (Bi-Weekly), D (Daily), M (Monthly), S (Semi-Monthly), Q (Quarterly), W (Weekly)*. <br  />Max length: 5
    pay_frequency: typing.Optional[str] = Field(None, alias='payFrequency')

    # Employee pay grade. Must match Company setup. <br  /> Max length: 10
    pay_grade: typing.Optional[str] = Field(None, alias='payGrade')

    # Employee pay group. Must match Company setup. <br  /> Max length: 20
    pay_group: typing.Optional[str] = Field(None, alias='payGroup')

    # Pay rate notes regarding employee.<br  /> Max length: 250
    pay_rate_note: typing.Optional[str] = Field(None, alias='payRateNote')

    # Indicates if employee is eligible for pension.
    pension: typing.Optional[bool] = Field(None, alias='pension')

    # Employee personal email address. <br  />Max length: 50
    personal_email_address: typing.Optional[str] = Field(None, alias='personalEmailAddress')

    # Employee personal mobile phone number. <br  />Max length: 12
    personal_mobile_phone: typing.Optional[str] = Field(None, alias='personalMobilePhone')

    # Employee position code. Must match Company setup.<br  />Max length: 20
    position_code: typing.Optional[str] = Field(None, alias='positionCode')

    # Primary Pay Rate EffectiveDate
    primary_pay_rate_effective_date: typing.Optional[date] = Field(None, alias='primaryPayRateEffectiveDate')

    # Prior last name if applicable.<br  />Max length: 40
    prior_last_name: typing.Optional[str] = Field(None, alias='priorLastName')

    # Employee rate (pay type) code.  Valid values are *Hourly* or *Salary*. <br  />Max length: 10
    rate_code: typing.Optional[str] = Field(None, alias='rateCode')

    # Employee base rate frequency used with payType Hourly. Common values are *Hour, Week*. Default is Hour. <br  />Max length: 10
    rate_per: typing.Optional[str] = Field(None, alias='ratePer')

    # Company number of reviewer. <br  />Max length: 9
    reviewer_co: typing.Optional[str] = Field(None, alias='reviewerCo')

    # Employee id of the reviewer. <br  />Max length: 10
    reviewer_id: typing.Optional[str] = Field(None, alias='reviewerId')

    # Employee gross salary per pay period used with payType Salary.<br  />Decimal (12,2)
    salary: typing.Optional[typing.Union[int, float]] = Field(None, alias='salary')

    # Employee preferred salutation. <br  />Max length: 10
    salutation: typing.Optional[str] = Field(None, alias='salutation')

    # Employee gender. Common values *M* (Male), *F* (Female). <br  />Max length: 1
    sex: typing.Optional[str] = Field(None, alias='sex')

    # Employee work shift.<br  />Max length: 255
    shift: typing.Optional[str] = Field(None, alias='shift')

    # Indicates if employee exempt from state income tax.
    sitw_exempt: typing.Optional[bool] = Field(None, alias='sitwExempt')

    # Notes for SITW exempt.<br  /> Max length: 250
    sitw_exempt_notes: typing.Optional[str] = Field(None, alias='sitwExemptNotes')

    # Reason code for SITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30
    sitw_exempt_reason: typing.Optional[str] = Field(None, alias='sitwExemptReason')

    # Indicates if employee is a smoker.
    smoker: typing.Optional[bool] = Field(None, alias='smoker')

    # Indicates if employee is exempt from Social Security taxes.
    ss_exempt: typing.Optional[bool] = Field(None, alias='ssExempt')

    # Notes for Socal Security exemptions.<br  /> Max length: 250
    ss_exempt_notes: typing.Optional[str] = Field(None, alias='ssExemptNotes')

    # Reason code for Social Security exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30
    ss_exempt_reason: typing.Optional[str] = Field(None, alias='ssExemptReason')

    # Employee social security number. Leave it blank if valid social security number not available. <br  />Max length: 11
    ssn: typing.Optional[str] = Field(None, alias='ssn')

    # Employee home state. <br  />Max length: 2
    state: typing.Optional[str] = Field(None, alias='state')

    # Indicates if employee is statutory.
    statutory: typing.Optional[bool] = Field(None, alias='statutory')

    # Employee name suffix. Common values are *Jr, Sr, II*.<br  />Max length: 30
    suffix: typing.Optional[str] = Field(None, alias='suffix')

    # Indicates if employee is exempt from state unemployment insurance.
    sui_exempt: typing.Optional[bool] = Field(None, alias='suiExempt')

    # Notes for SUI exempt.<br  /> Max length: 250
    sui_exempt_notes: typing.Optional[str] = Field(None, alias='suiExemptNotes')

    # Reason code for SUI exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30
    sui_exempt_reason: typing.Optional[str] = Field(None, alias='suiExemptReason')

    # Employee SUI (State Unemployment Insurance) state. <br  />Max length: 2
    sui_state: typing.Optional[str] = Field(None, alias='suiState')

    # Supervisor's company number. Defaults to employee company number.<br  />Max length: 9
    supervisor_co: typing.Optional[str] = Field(None, alias='supervisorCo')

    # EmployeeId of the supervisor. <br  />Max length: 10
    supervisor_i_d: typing.Optional[str] = Field(None, alias='supervisorID')

    # Emplopyee 1099R distribution code. Common values are *7* (Normal Distribution), *F* (Charitable Gift Annuity). <br  />Max length: 1
    tax_distribution_code1099_r: typing.Optional[str] = Field(None, alias='taxDistributionCode1099R')

    # Employee tax form for reporting income. Valid values are *W2, 1099M, 1099R*. Default is W2. <br  />Max length: 15
    tax_form: typing.Optional[str] = Field(None, alias='taxForm')

    # Indicates if employee receives tips.
    tipped: typing.Optional[str] = Field(None, alias='tipped')

    # Employee union code. Must match Company setup. <br  />Max length: 10
    union_code: typing.Optional[str] = Field(None, alias='unionCode')

    # Employee union affiliation effective date. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
    union_date: typing.Optional[date] = Field(None, alias='unionDate')

    # Indicates if union dues are collected.
    union_dues: typing.Optional[bool] = Field(None, alias='unionDues')

    # Indicates if initiations fees are collected.
    union_init_fees: typing.Optional[bool] = Field(None, alias='unionInitFees')

    # Employee union position. Must match Company setup. <br  />Max length: 30
    union_position: typing.Optional[str] = Field(None, alias='unionPosition')

    # Indicates if employee is a veteran.
    veteran: typing.Optional[bool] = Field(None, alias='veteran')

    # Indicates if employee is exempt from Washington state Liability Insurance.
    wali_exempt: typing.Optional[bool] = Field(None, alias='waliExempt')

    # Notes for WALI exemption.
    wali_exempt_notes: typing.Optional[str] = Field(None, alias='waliExemptNotes')

    # Reason code for WALI exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30
    wali_exempt_reason: typing.Optional[str] = Field(None, alias='waliExemptReason')

    # Employee work 1st address line.<br  /> Max length: 40
    work_address1: typing.Optional[str] = Field(None, alias='workAddress1')

    # Employee work 2nd address line. <br  /> Max length: 40
    work_address2: typing.Optional[str] = Field(None, alias='workAddress2')

    # Employee work city.<br  /> Max length: 40
    work_city: typing.Optional[str] = Field(None, alias='workCity')

    # Employee work country.<br  /> Max length: 30
    work_country: typing.Optional[str] = Field(None, alias='workCountry')

    # Employee work county.<br  /> Max length: 30
    work_county: typing.Optional[str] = Field(None, alias='workCounty')

    # Employee work email. <br  />Max length: 50
    work_email_address: typing.Optional[str] = Field(None, alias='workEmailAddress')

    # Employee worker compensation code. Must match Company setup.<br  /> Max length: 10
    workers_comp: typing.Optional[str] = Field(None, alias='workersComp')

    # Employee work phone extension number.<br  /> Max length: 10
    work_ext: typing.Optional[str] = Field(None, alias='workExt')

    # Employee work location. <br  /> Max length: 50
    work_location: typing.Optional[str] = Field(None, alias='workLocation')

    # Employee physical mail box location.<br  /> Max length: 10
    work_mail_stop: typing.Optional[str] = Field(None, alias='workMailStop')

    # Employee work mobile phone number.<br  /> Max length: 12
    work_mobile_phone: typing.Optional[str] = Field(None, alias='workMobilePhone')

    # Employee work pager number.<br  /> Max length: 20
    work_pager: typing.Optional[str] = Field(None, alias='workPager')

    # Employee work phone number.<br  /> Max length: 12
    work_phone: typing.Optional[str] = Field(None, alias='workPhone')

    # Employee work state.<br  /> Max length: 2
    work_state: typing.Optional[str] = Field(None, alias='workState')

    # Employee work zip code.<br  /> Max length: 10
    work_zip: typing.Optional[str] = Field(None, alias='workZip')

    # Employee home zip code. <br  />Max length: 10
    zip: typing.Optional[str] = Field(None, alias='zip')

    # If set to *True*, employee will be synced with Web Time.
    sync_web_time_record: typing.Optional[bool] = Field(None, alias='syncWebTimeRecord')

    new_benefit_class_setup: typing.Optional[typing.List[NewBenefitClassSetup]] = Field(None, alias='newBenefitClassSetup')

    new_main_direct_deposit: typing.Optional[typing.List[NewMainDirectDeposit]] = Field(None, alias='newMainDirectDeposit')

    new_additional_direct_deposit: typing.Optional[typing.List[NewAdditionalDirectDeposit]] = Field(None, alias='newAdditionalDirectDeposit')

    new_fed_tax: typing.Optional[typing.List[NewFedTax]] = Field(None, alias='newFedTax')

    new_local_tax: typing.Optional[typing.List[NewLocalTax]] = Field(None, alias='newLocalTax')

    new_state_tax: typing.Optional[typing.List[NewStateTax]] = Field(None, alias='newStateTax')

    new_work_eligibility: typing.Optional[typing.List[NewWorkEligibility]] = Field(None, alias='newWorkEligibility')
    class Config:
        arbitrary_types_allowed = True
