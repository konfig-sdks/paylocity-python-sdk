# coding: utf-8

"""
    WebLink API

    For documentation about this API, please visit https://developer.paylocity.com/integrations/reference/weblink-overview

    The version of the OpenAPI document: v2
    Contact: webservices@paylocity.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from paylocity_python_sdk.pydantic.benefit_setup import BenefitSetup
from paylocity_python_sdk.pydantic.department_position import DepartmentPosition
from paylocity_python_sdk.pydantic.primary_pay_rate import PrimaryPayRate
from paylocity_python_sdk.pydantic.web_time import WebTime

class UpdateEmployee(BaseModel):
    # Employee home 1st address line. <br  />Max length: 40
    address1: typing.Optional[str] = Field(None, alias='address1')

    # Employee home 2nd address line. <br  />Max length: 40
    address2: typing.Optional[str] = Field(None, alias='address2')

    # Adjusted seniority date. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
    adj_seniority_date: typing.Optional[date] = Field(None, alias='adjSeniorityDate')

    # Employee birthdate. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
    birth_date: typing.Optional[date] = Field(None, alias='birthDate')

    # Employee home city. <br  />Max length: 40
    city: typing.Optional[str] = Field(None, alias='city')

    # Paylocity assigned company number. <br  /> Max length: 9
    company_number: typing.Optional[str] = Field(None, alias='companyNumber')

    # Employee country. <br  /> Max length: 30
    country: typing.Optional[str] = Field(None, alias='country')

    # Employee county.<br  /> Max length: 30
    county: typing.Optional[str] = Field(None, alias='county')

    # Indicates if employee has disability status.
    disability: typing.Optional[str] = Field(None, alias='disability')

    # Indicates if employee eligible for rehire.
    eligible_for_rehire: typing.Optional[bool] = Field(None, alias='eligibleForRehire')

    # The Paylocity Employee ID. This is a unique value per Paylocity Company ID.  **Allowable Values:**  10 char max
    employee_id: typing.Optional[str] = Field(None, alias='employeeId')

    # Employee current work status. Common values are *A* (Active), *L* (Leave of Absence), *T* (Terminated). <br  />Max length: 20
    employee_status: typing.Optional[str] = Field(None, alias='employeeStatus')

    # Employee status change reason. Must match Company setup.<br  />Max length: 15
    emp_status_change_reason: typing.Optional[str] = Field(None, alias='empStatusChangeReason')

    # Effective date of employee status change, can be in the future. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
    emp_status_effective_date: typing.Optional[str] = Field(None, alias='empStatusEffectiveDate')

    # Employee ethnicity.<br  /> Max length: 10
    ethnicity: typing.Optional[str] = Field(None, alias='ethnicity')

    # Employee first name. <br  />Max length: 40
    first_name: typing.Optional[str] = Field(None, alias='firstName')

    # Employee home phone number.  <br  />Max length: 12
    home_phone: typing.Optional[str] = Field(None, alias='homePhone')

    # Employee last name. <br  />Max length: 40
    last_name: typing.Optional[str] = Field(None, alias='lastName')

    # Employee marital status. Common values *D (Divorced), M (Married), S (Single), W (Widowed)*. <br  />Max length: 10
    marital_status: typing.Optional[str] = Field(None, alias='maritalStatus')

    # Employee middle name.<br  /> Max length: 20
    middle_name: typing.Optional[str] = Field(None, alias='middleName')

    # Employee preferred display name. <br  /> Max length: 20
    nickname: typing.Optional[str] = Field(None, alias='nickname')

    # Employee work pager number.<br  /> Max length: 20
    pager: typing.Optional[str] = Field(None, alias='pager')

    # Employee personal email address. <br  />Max length: 50
    personal_email_address: typing.Optional[str] = Field(None, alias='personalEmailAddress')

    # Employee personal mobile phone number. <br  />Max length: 12
    personal_mobile_phone: typing.Optional[str] = Field(None, alias='personalMobilePhone')

    # Prior last name if applicable.<br  />Max length: 40
    prior_last_name: typing.Optional[str] = Field(None, alias='priorLastName')

    # Employee preferred salutation. <br  />Max length: 10
    salutation: typing.Optional[str] = Field(None, alias='salutation')

    # Employee gender. Common values *M* (Male), *F* (Female). <br  />Max length: 1
    sex: typing.Optional[str] = Field(None, alias='sex')

    # Indicates if employee is a smoker.
    smoker: typing.Optional[bool] = Field(None, alias='smoker')

    # Employee social security number. Leave it blank if valid social security number not available. <br  />Max length: 11
    ssn: typing.Optional[str] = Field(None, alias='ssn')

    # Employee home state. <br  />Max length: 2
    state: typing.Optional[str] = Field(None, alias='state')

    # Employee name suffix. Common values are *Jr, Sr, II*.<br  />Max length: 30
    suffix: typing.Optional[str] = Field(None, alias='suffix')

    # Indicates if employee is exempt from state unemployment insurance.
    sui_exempt: typing.Optional[bool] = Field(None, alias='suiExempt')

    # Notes for SUI exempt.<br  /> Max length: 250
    sui_exempt_notes: typing.Optional[str] = Field(None, alias='suiExemptNotes')

    # Reason code for SUI exemption. Common values are *SE* (Statutory employee), *CR* (Clergy/Religious). <br  /> Max length: 30
    sui_exempt_reason: typing.Optional[str] = Field(None, alias='suiExemptReason')

    # Indicates if employee is a veteran.
    veteran: typing.Optional[str] = Field(None, alias='veteran')

    # Employee work 1st address line.<br  /> Max length: 40
    work_address1: typing.Optional[str] = Field(None, alias='workAddress1')

    # Employee work 2nd address line. <br  /> Max length: 40
    work_address2: typing.Optional[str] = Field(None, alias='workAddress2')

    # Employee work city.<br  /> Max length: 40
    work_city: typing.Optional[str] = Field(None, alias='workCity')

    # Employee work country.<br  /> Max length: 30
    work_country: typing.Optional[str] = Field(None, alias='workCountry')

    # Employee work county.<br  /> Max length: 30
    work_county: typing.Optional[str] = Field(None, alias='workCounty')

    # Employee work email. <br  />Max length: 50
    work_email_address: typing.Optional[str] = Field(None, alias='workEmailAddress')

    # Employee physical mail box location.<br  /> Max length: 10
    work_mail_stop: typing.Optional[str] = Field(None, alias='workMailStop')

    # Employee work mobile phone number.<br  /> Max length: 12
    work_mobile_phone: typing.Optional[str] = Field(None, alias='workMobilePhone')

    # Employee work pager number.<br  /> Max length: 20
    work_pager: typing.Optional[str] = Field(None, alias='workPager')

    # Employee work phone number.<br  /> Max length: 12
    work_phone: typing.Optional[str] = Field(None, alias='workPhone')

    # Employee work phone extension number.<br  /> Max length: 10
    work_phone_ext: typing.Optional[str] = Field(None, alias='workPhoneExt')

    # Employee work state.<br  /> Max length: 2
    work_state: typing.Optional[str] = Field(None, alias='workState')

    # Employee work zip code.<br  /> Max length: 10
    work_zip: typing.Optional[str] = Field(None, alias='workZip')

    # Employee home zip code. <br  />Max length: 10
    zip: typing.Optional[str] = Field(None, alias='zip')

    benefit_setup: typing.Optional[typing.List[BenefitSetup]] = Field(None, alias='benefitSetup')

    department_position: typing.Optional[typing.List[DepartmentPosition]] = Field(None, alias='departmentPosition')

    primary_pay_rate: typing.Optional[typing.List[PrimaryPayRate]] = Field(None, alias='primaryPayRate')

    web_time: typing.Optional[typing.List[WebTime]] = Field(None, alias='webTime')
    class Config:
        arbitrary_types_allowed = True
