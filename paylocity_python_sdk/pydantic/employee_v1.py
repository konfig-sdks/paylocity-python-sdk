# coding: utf-8

"""
    WebLink API

    For documentation about this API, please visit https://developer.paylocity.com/integrations/reference/weblink-overview

    The version of the OpenAPI document: v2
    Contact: webservices@paylocity.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from paylocity_python_sdk.pydantic.employee_v1_benefit_setup import EmployeeV1BenefitSetup
from paylocity_python_sdk.pydantic.employee_v1_department_position import EmployeeV1DepartmentPosition
from paylocity_python_sdk.pydantic.employee_v1_employee_status import EmployeeV1EmployeeStatus
from paylocity_python_sdk.pydantic.employee_v1_primary_pay_rate import EmployeeV1PrimaryPayRate

class EmployeeV1(BaseModel):
    # Employee home 1st address line. <br  />Max length: 40
    address1: typing.Optional[str] = Field(None, alias='address1')

    # Employee home 2nd address line. <br  />Max length: 40
    address2: typing.Optional[str] = Field(None, alias='address2')

    benefit_setup: typing.Optional[EmployeeV1BenefitSetup] = Field(None, alias='benefitSetup')

    # Employee birthdate. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
    birth_date: typing.Optional[str] = Field(None, alias='birthDate')

    # Employee home city. <br  />Max length: 40
    city: typing.Optional[str] = Field(None, alias='city')

    # Paylocity assigned company number. <br  /> Max length: 9
    company_number: typing.Optional[str] = Field(None, alias='companyNumber')

    department_position: typing.Optional[EmployeeV1DepartmentPosition] = Field(None, alias='departmentPosition')

    # Leave blank to have Paylocity Payroll/HR solution automatically assign the next available employee ID.<br  /> Max length: 10
    employee_id: typing.Optional[str] = Field(None, alias='employeeId')

    employee_status: typing.Optional[EmployeeV1EmployeeStatus] = Field(None, alias='employeeStatus')

    # Employee ethnicity.<br  /> Max length: 10
    ethnicity: typing.Optional[str] = Field(None, alias='ethnicity')

    # Employee first name. <br  />Max length: 40
    first_name: typing.Optional[str] = Field(None, alias='firstName')

    # Employee gender. Common values *M* (Male), *F* (Female). <br  />Max length: 1
    gender: typing.Optional[str] = Field(None, alias='gender')

    # Indicates if employee meets the highly compensated employee criteria.
    highly_compensated_employee: typing.Optional[bool] = Field(None, alias='highlyCompensatedEmployee')

    # Employee hired date. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
    hire_date: typing.Optional[str] = Field(None, alias='hireDate')

    # Employee home phone number.  <br  />Max length: 12
    home_phone: typing.Optional[str] = Field(None, alias='homePhone')

    # Employee last name. <br  />Max length: 40
    last_name: typing.Optional[str] = Field(None, alias='lastName')

    # Employee marital status. Common values *D (Divorced), M (Married), S (Single), W (Widowed)*. <br  />Max length: 10
    marital_status: typing.Optional[str] = Field(None, alias='maritalStatus')

    # Employee middle name.<br  /> Max length: 20
    middle_name: typing.Optional[str] = Field(None, alias='middleName')

    # Employee preferred display name. <br  /> Max length: 20
    nickname: typing.Optional[str] = Field(None, alias='nickname')

    # Percentage of employee's ownership in the company, entered as a whole number . <br  /> Decimal (12,2)
    owner_percent: typing.Optional[typing.Union[int, float]] = Field(None, alias='ownerPercent')

    # Employee personal email address. <br  />Max length: 50
    personal_email_address: typing.Optional[str] = Field(None, alias='personalEmailAddress')

    # Employee personal mobile phone number. <br  />Max length: 12
    personal_mobile_phone: typing.Optional[str] = Field(None, alias='personalMobilePhone')

    # Employee position code. Must match Company setup.<br  />Max length: 20 
    position: typing.Optional[str] = Field(None, alias='position')

    # Employee work zip code.<br  /> Max length: 10
    postal_code: typing.Optional[str] = Field(None, alias='postalCode')

    primary_pay_rate: typing.Optional[EmployeeV1PrimaryPayRate] = Field(None, alias='primaryPayRate')

    # Rehire date if employee is rehired. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
    re_hire_date: typing.Optional[str] = Field(None, alias='reHireDate')

    # Employee social security number. Leave it blank if valid social security number not available. <br  />Max length: 11
    ssn: typing.Optional[str] = Field(None, alias='ssn')

    # Employee home state. <br  />Max length: 2
    state: typing.Optional[str] = Field(None, alias='state')

    # Indicates if employee is statutory.
    statutory: typing.Optional[bool] = Field(None, alias='statutory')

    # Supervisor's company number. Defaults to employee company number.<br  />Max length: 9
    supervisor_company_number: typing.Optional[str] = Field(None, alias='supervisorCompanyNumber')

    # EmployeeId of the supervisor. <br  />Max length: 10
    supervisor_employee_id: typing.Optional[str] = Field(None, alias='supervisorEmployeeId')

    # Employee tax form for reporting income. Valid values are *W2, 1099M, 1099R*. Default is W2. <br  />Max length: 15
    tax_form: typing.Optional[str] = Field(None, alias='taxForm')

    # Date of emplyee termination. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
    termination_date: typing.Optional[str] = Field(None, alias='terminationDate')

    # Employee termination reason. Must match Company setup for employee status.<br  />Max length: 15
    termination_reason: typing.Optional[str] = Field(None, alias='terminationReason')

    # Employee work email. <br  />Max length: 50
    work_email_address: typing.Optional[str] = Field(None, alias='workEmailAddress')

    # Employee work phone number.<br  /> Max length: 12
    work_phone: typing.Optional[str] = Field(None, alias='workPhone')

    # Employee work phone extension number.<br  /> Max length: 10
    work_phone_ext: typing.Optional[str] = Field(None, alias='workPhoneExt')
    class Config:
        arbitrary_types_allowed = True
