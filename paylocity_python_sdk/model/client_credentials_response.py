# coding: utf-8

"""
    WebLink API

    For documentation about this API, please visit https://developer.paylocity.com/integrations/reference/weblink-overview

    The version of the OpenAPI document: v2
    Contact: webservices@paylocity.com
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from paylocity_python_sdk import schemas  # noqa: F401


class ClientCredentialsResponse(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    The Client Credentials Response Model
    """


    class MetaOapg:
        
        class properties:
            clientSecret = schemas.DictSchema
            clientSecretExpirationDate = schemas.DictSchema
            __annotations__ = {
                "clientSecret": clientSecret,
                "clientSecretExpirationDate": clientSecretExpirationDate,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["clientSecret"]) -> MetaOapg.properties.clientSecret: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["clientSecretExpirationDate"]) -> MetaOapg.properties.clientSecretExpirationDate: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["clientSecret", "clientSecretExpirationDate", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["clientSecret"]) -> typing.Union[MetaOapg.properties.clientSecret, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["clientSecretExpirationDate"]) -> typing.Union[MetaOapg.properties.clientSecretExpirationDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["clientSecret", "clientSecretExpirationDate", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        clientSecret: typing.Union[MetaOapg.properties.clientSecret, dict, frozendict.frozendict, schemas.Unset] = schemas.unset,
        clientSecretExpirationDate: typing.Union[MetaOapg.properties.clientSecretExpirationDate, dict, frozendict.frozendict, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ClientCredentialsResponse':
        return super().__new__(
            cls,
            *args,
            clientSecret=clientSecret,
            clientSecretExpirationDate=clientSecretExpirationDate,
            _configuration=_configuration,
            **kwargs,
        )
