# coding: utf-8

"""
    WebLink API

    For documentation about this API, please visit https://developer.paylocity.com/integrations/reference/weblink-overview

    The version of the OpenAPI document: v2
    Contact: webservices@paylocity.com
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from paylocity_python_sdk import schemas  # noqa: F401


class SensitiveData(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    The sensitive data model
    """


    class MetaOapg:
        
        class properties:
            disability = schemas.DictSchema
            ethnicity = schemas.DictSchema
            gender = schemas.DictSchema
            veteran = schemas.DictSchema
            __annotations__ = {
                "disability": disability,
                "ethnicity": ethnicity,
                "gender": gender,
                "veteran": veteran,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["disability"]) -> MetaOapg.properties.disability: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ethnicity"]) -> MetaOapg.properties.ethnicity: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["gender"]) -> MetaOapg.properties.gender: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["veteran"]) -> MetaOapg.properties.veteran: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["disability", "ethnicity", "gender", "veteran", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["disability"]) -> typing.Union[MetaOapg.properties.disability, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ethnicity"]) -> typing.Union[MetaOapg.properties.ethnicity, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["gender"]) -> typing.Union[MetaOapg.properties.gender, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["veteran"]) -> typing.Union[MetaOapg.properties.veteran, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["disability", "ethnicity", "gender", "veteran", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        disability: typing.Union[MetaOapg.properties.disability, dict, frozendict.frozendict, schemas.Unset] = schemas.unset,
        ethnicity: typing.Union[MetaOapg.properties.ethnicity, dict, frozendict.frozendict, schemas.Unset] = schemas.unset,
        gender: typing.Union[MetaOapg.properties.gender, dict, frozendict.frozendict, schemas.Unset] = schemas.unset,
        veteran: typing.Union[MetaOapg.properties.veteran, dict, frozendict.frozendict, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'SensitiveData':
        return super().__new__(
            cls,
            *args,
            disability=disability,
            ethnicity=ethnicity,
            gender=gender,
            veteran=veteran,
            _configuration=_configuration,
            **kwargs,
        )
