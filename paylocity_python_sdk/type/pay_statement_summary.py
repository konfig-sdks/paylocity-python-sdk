# coding: utf-8

"""
    WebLink API

    For documentation about this API, please visit https://developer.paylocity.com/integrations/reference/weblink-overview

    The version of the OpenAPI document: v2
    Contact: webservices@paylocity.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING


class RequiredPayStatementSummary(TypedDict):
    pass

class OptionalPayStatementSummary(TypedDict, total=False):
    # .<br />
    autoPay: bool

    # .<br />
    beginDate: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # .<br />
    checkDate: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # .<br />
    checkNumber: int

    # .<br />
    directDepositAmount: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # .<br />
    endDate: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # .<br />
    grossPay: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # .<br />
    hours: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # .<br />
    netCheck: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # .<br />
    netPay: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # .<br />
    overtimeDollars: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # .<br />
    overtimeHours: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # .<br />
    process: int

    # .<br />
    regularDollars: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # .<br />
    regularHours: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # <br />
    transactionNumber: int

    # .<br />
    voucherNumber: int

    # .<br />
    workersCompCode: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # .<br />
    year: int

class PayStatementSummary(RequiredPayStatementSummary, OptionalPayStatementSummary):
    pass
