# coding: utf-8

"""
    WebLink API

    For documentation about this API, please visit https://developer.paylocity.com/integrations/reference/weblink-overview

    The version of the OpenAPI document: v2
    Contact: webservices@paylocity.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING

from paylocity_python_sdk.type.staged_employee_additional_direct_deposit import StagedEmployeeAdditionalDirectDeposit
from paylocity_python_sdk.type.staged_employee_benefit_setup import StagedEmployeeBenefitSetup
from paylocity_python_sdk.type.staged_employee_custom_boolean_fields import StagedEmployeeCustomBooleanFields
from paylocity_python_sdk.type.staged_employee_custom_date_fields import StagedEmployeeCustomDateFields
from paylocity_python_sdk.type.staged_employee_custom_drop_down_fields import StagedEmployeeCustomDropDownFields
from paylocity_python_sdk.type.staged_employee_custom_number_fields import StagedEmployeeCustomNumberFields
from paylocity_python_sdk.type.staged_employee_custom_text_fields import StagedEmployeeCustomTextFields
from paylocity_python_sdk.type.staged_employee_department_position import StagedEmployeeDepartmentPosition
from paylocity_python_sdk.type.staged_employee_federal_tax import StagedEmployeeFederalTax
from paylocity_python_sdk.type.staged_employee_home_address import StagedEmployeeHomeAddress
from paylocity_python_sdk.type.staged_employee_local_tax import StagedEmployeeLocalTax
from paylocity_python_sdk.type.staged_employee_main_direct_deposit import StagedEmployeeMainDirectDeposit
from paylocity_python_sdk.type.staged_employee_non_primary_state_tax import StagedEmployeeNonPrimaryStateTax
from paylocity_python_sdk.type.staged_employee_primary_pay_rate import StagedEmployeePrimaryPayRate
from paylocity_python_sdk.type.staged_employee_primary_state_tax import StagedEmployeePrimaryStateTax
from paylocity_python_sdk.type.staged_employee_status import StagedEmployeeStatus
from paylocity_python_sdk.type.staged_employee_work_address import StagedEmployeeWorkAddress
from paylocity_python_sdk.type.staged_employee_work_eligibility import StagedEmployeeWorkEligibility

class RequiredStagedEmployee(TypedDict):
    pass

class OptionalStagedEmployee(TypedDict, total=False):
    additionalDirectDeposit: StagedEmployeeAdditionalDirectDeposit

    benefitSetup: StagedEmployeeBenefitSetup

    # Employee birthdate. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.
    birthDate: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    customBooleanFields: StagedEmployeeCustomBooleanFields

    customDateFields: StagedEmployeeCustomDateFields

    customDropDownFields: StagedEmployeeCustomDropDownFields

    customNumberFields: StagedEmployeeCustomNumberFields

    customTextFields: StagedEmployeeCustomTextFields

    departmentPosition: StagedEmployeeDepartmentPosition

    # Indicates if employee has disability status.
    disabilityDescription: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Leave blank to have Paylocity Payroll/HR solution automatically assign the next available employee ID.<br  /> Max length: 10
    employeeId: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Employee ethnicity.<br  /> Max length: 10
    ethnicity: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    federalTax: StagedEmployeeFederalTax

    # Employee first name. <br  />Max length: 40
    firstName: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Reason code for FITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30
    fitwExemptReason: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Reason code for FUTA exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max length: 30
    futaExemptReason: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Employee gender. Common values *M* (Male), *F* (Female). <br  />Max length: 1
    gender: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    homeAddress: StagedEmployeeHomeAddress

    # Indicates if employee in agriculture or farming.
    isEmployee943: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Indicates if employee is a smoker.
    isSmoker: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Employee last name. <br  />Max length: 40
    lastName: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    localTax: StagedEmployeeLocalTax

    mainDirectDeposit: StagedEmployeeMainDirectDeposit

    # Employee marital status. Common values *D (Divorced), M (Married), S (Single), W (Widowed)*. <br  />Max length: 10
    maritalStatus: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Reason code for Medicare exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max length: 30
    medExemptReason: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Employee middle name.<br  /> Max length: 20
    middleName: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    nonPrimaryStateTax: StagedEmployeeNonPrimaryStateTax

    # Employee preferred display name.<br  /> Max length: 20
    preferredName: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    primaryPayRate: StagedEmployeePrimaryPayRate

    primaryStateTax: StagedEmployeePrimaryStateTax

    # Prior last name if applicable.<br  />Max length: 40
    priorLastName: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Employee preferred salutation. <br  />Max length: 10
    salutation: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Reason code for SITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30
    sitwExemptReason: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Reason code for Social Security exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30
    ssExemptReason: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Employee social security number. Leave it blank if valid social security number not available. <br  />Max length: 11
    ssn: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    status: StagedEmployeeStatus

    # Employee name suffix. Common values are *Jr, Sr, II*.<br  />Max length: 30
    suffix: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Reason code for SUI exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30
    suiExemptReason: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Employee SUI (State Unemployment Insurance) state. <br  />Max length: 2
    suiState: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Employee 1099R distribution code. Common values are *7* (Normal Distribution), *F* (Charitable Gift Annuity). <br  />Max length: 1
    taxDistributionCode1099R: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Employee tax form for reporting income. Valid values are *W2, 1099M, 1099R*. Default is W2. <br  />Max length: 15
    taxForm: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Indicates if employee is a veteran.
    veteranDescription: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Add Web Time badge number and charge rate and synchronize Paylocity Payroll/HR solution and Web Time employee data.
    webTime: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    workAddress: StagedEmployeeWorkAddress

    workEligibility: StagedEmployeeWorkEligibility

class StagedEmployee(RequiredStagedEmployee, OptionalStagedEmployee):
    pass
