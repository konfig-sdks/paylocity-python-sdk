# coding: utf-8

"""
    WebLink API

    For documentation about this API, please visit https://developer.paylocity.com/integrations/reference/weblink-overview

    The version of the OpenAPI document: v2
    Contact: webservices@paylocity.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING


class RequiredAdditionalRate(TypedDict):
    pass

class OptionalAdditionalRate(TypedDict, total=False):
    # Not required. If populated, must match one of the system coded values available in the Additional Rates Change Reason drop down.<br />
    changeReason: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Not required. Valid values must match one of the system coded cost centers available in the Additional Rates Cost Center level 1 drop down. This cell must be in a text format.<br />
    costCenter1: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Not required. Valid values must match one of the system coded cost centers available in the Additional Rates Cost Center level 2 drop down. This cell must be in a text format.<br />
    costCenter2: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Not required. Valid values must match one of the system coded cost centers available in the Additional Rates Cost Center level 3 drop down. This cell must be in a text format.<br />
    costCenter3: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Required. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.<br />
    effectiveDate: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Not required. Must match one of the system coded check dates available in the Additional Rates End Check Date drop down. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.<br />
    endCheckDate: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Not required. If populated, must match one of the system coded values available in the Additional Rates Job drop down.<br />
    job: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Required. Enter dollar amount that corresponds to the Per selection.<br />
    rate: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Required. If populated, must match one of the system coded values available in the Additional Rates Rate Code drop down.<br />
    rateCode: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Not required.<br  />Max length: 4000<br />
    rateNotes: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Required. Valid values are HOUR or WEEK.<br />
    ratePer: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # Not required. If populated, must match one of the system coded values available in the Additional Rates Shift drop down.<br />
    shift: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

class AdditionalRate(RequiredAdditionalRate, OptionalAdditionalRate):
    pass
